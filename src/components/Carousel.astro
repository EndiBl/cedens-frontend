---
interface Props {
  slides: any[],
  slideComponent: any,
  navigationColor?: string
}

const { 
  slides, 
  slideComponent: SlideComponent, 
  navigationColor = 'var(--color-primary)' 
} = Astro.props;
---


<div class="swiper">
  <div class="swiper-wrapper">
    {
      slides.map((slide, index) => (
        <div class="swiper-slide">
          <SlideComponent {...slide} /> 
        </div>
      ))
    }
  </div>
  <div class="swiper-pagination"></div>
  <div class="swiper-button-prev"></div>
  <div class="swiper-button-next"></div>
  <div class="swiper-scrollbar"></div>
</div>


<style define:vars={{ navigationColor }}>
  .swiper {
    padding: 0 48px;
  }

  .swiper-button-prev,
  .swiper-button-next {
    color: var(--navigationColor);
  }

  .swiper-button-prev::after,
  .swiper-button-next::after {
    font-size: 32px;
  }
</style>


<script>
  import Swiper from 'swiper';
  import { Navigation, Pagination, Scrollbar } from 'swiper/modules';
  import 'swiper/css';
  import 'swiper/css/navigation';
  import 'swiper/css/pagination';
  import 'swiper/css/scrollbar';

  function initSwiper() {
    const swiper = new Swiper('.swiper', {
      modules: [Navigation, Pagination, Scrollbar],
      loop: true,
      centerInsufficientSlides: true,
      slidesPerView: 1,
      spaceBetween: 50,
      breakpoints: {
        720: {
          slidesPerView: 2,
          spaceBetween: 50
        },
        1280: {
          slidesPerView: 3,
          spaceBetween: 50
        }
      },
      pagination: {
        el: ".swiper-pagination",
        clickable: true,
      },
      navigation: {
        nextEl: ".swiper-button-next",
        prevEl: ".swiper-button-prev",
      },
    });

    console.log('Swiper initialized');
  }

  document.addEventListener('DOMContentLoaded', initSwiper);
</script>